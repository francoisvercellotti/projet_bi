name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest  # Le job s'exécute sur un runner Ubuntu

    steps:
      # Étape 1: Checkout du code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Étape 2: Configurer Python et installer les dépendances
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      # Étape 3: Créer un environnement virtuel et l'activer
      - name: Create and activate virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # Étape 4: Vérifier que le fichier de test existe dans le bon répertoire
      - name: Check files in bi_project directory
        run: |
          ls -al bi_project  # Liste les fichiers dans le répertoire 'bi_project'
          ls -al bi_project/  # Si le fichier test_environment.py y est bien présent

      # Étape 5: Lancer les tests (en précisant le chemin exact)
      - name: Run tests with pytest
        run: |
          source .venv/bin/activate  # Assurez-vous que l'environnement virtuel est activé
          echo "Environment activated"
          pytest bi_project\test_environment.py -v

      # Étape 6: Vérification du style de code (facultatif)
      - name: Lint code with ruff
        run: |
          source .venv/bin/activate
          ruff .  # Si ruff est installé, vérifie le style de code

      # Étape 7: Générer la documentation avec pdoc
      - name: Generate Documentation with pdoc
        run: |
          source .venv/bin/activate
          pdoc --html --output-dir docs .  # Génère la documentation dans le répertoire 'docs'
