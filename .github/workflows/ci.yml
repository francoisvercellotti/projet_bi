name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Cloner le dépôt
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Configurer Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Étape 3 : Installer les dépendances
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest ruff pdoc
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Étape 4 : Linting avec Ruff
      - name: Lint code with Ruff
        run: |
          ruff check .

      # Étape 5 : Exécuter les tests avec pytest
      - name: Test with pytest
        run: |
          pytest

      # Étape 6 : Générer la documentation avec pdoc
      - name: Generate docs with pdoc
        run: |
          # Générer la documentation pour tous les fichiers Python dans src
          find src -name "*.py" -exec pdoc {} --output-dir docs \;

          - name: Create .nojekyll file
          run: touch docs/.nojekyll

      - name: Commit and push docs
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add docs/
          git commit -m 'Update documentation'
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}